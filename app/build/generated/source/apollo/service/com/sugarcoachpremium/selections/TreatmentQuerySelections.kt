//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.2'.
//
package com.sugarcoachpremium.selections

import com.apollographql.apollo3.api.CompiledArgument
import com.apollographql.apollo3.api.CompiledField
import com.apollographql.apollo3.api.CompiledSelection
import com.apollographql.apollo3.api.CompiledVariable
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.notNull
import com.sugarcoachpremium.type.GraphQLBoolean
import com.sugarcoachpremium.type.GraphQLFloat
import com.sugarcoachpremium.type.GraphQLID
import com.sugarcoachpremium.type.GraphQLString
import com.sugarcoachpremium.type.Treatment
import com.sugarcoachpremium.type.TreatmentEntity
import com.sugarcoachpremium.type.TreatmentEntityResponseCollection
import kotlin.collections.List

public object TreatmentQuerySelections {
  private val __attributes: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "bomb",
          type = GraphQLBoolean.type
        ).build(),
        CompiledField.Builder(
          name = "insulina_unit",
          type = GraphQLFloat.type
        ).build(),
        CompiledField.Builder(
          name = "object_glucose",
          type = GraphQLFloat.type
        ).build(),
        CompiledField.Builder(
          name = "correctora",
          type = GraphQLFloat.type
        ).build(),
        CompiledField.Builder(
          name = "correctora_unit",
          type = GraphQLFloat.type
        ).build(),
        CompiledField.Builder(
          name = "hyperglucose",
          type = GraphQLFloat.type
        ).build(),
        CompiledField.Builder(
          name = "hipoglucose",
          type = GraphQLFloat.type
        ).build(),
        CompiledField.Builder(
          name = "carbono",
          type = GraphQLFloat.type
        ).build(),
        CompiledField.Builder(
          name = "basal_insuline",
          type = GraphQLString.type
        ).build(),
        CompiledField.Builder(
          name = "medidor",
          type = GraphQLString.type
        ).build(),
        CompiledField.Builder(
          name = "bomba_infusora",
          type = GraphQLString.type
        ).build(),
        CompiledField.Builder(
          name = "correctora_insuline",
          type = GraphQLString.type
        ).build()
      )

  private val __data: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "id",
          type = GraphQLID.type
        ).build(),
        CompiledField.Builder(
          name = "attributes",
          type = Treatment.type
        ).selections(__attributes)
        .build()
      )

  private val __treatments: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "data",
          type = TreatmentEntity.type.notNull().list().notNull()
        ).selections(__data)
        .build()
      )

  public val __root: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "treatments",
          type = TreatmentEntityResponseCollection.type
        ).arguments(listOf(
          CompiledArgument.Builder("filters", mapOf(
            "users_permissions_user" to mapOf(
              "id" to mapOf(
                "eq" to CompiledVariable("userId")
              )
            )
          )).build()
        ))
        .selections(__treatments)
        .build()
      )
}
