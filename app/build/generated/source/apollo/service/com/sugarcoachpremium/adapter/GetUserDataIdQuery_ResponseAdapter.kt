//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.6'.
//
package com.sugarcoachpremium.adapter

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.NullableStringAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.sugarcoachpremium.GetUserDataIdQuery
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object GetUserDataIdQuery_ResponseAdapter {
  public object Data : Adapter<GetUserDataIdQuery.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("usersData")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        GetUserDataIdQuery.Data {
      var _usersData: GetUserDataIdQuery.UsersData? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _usersData = UsersData.obj().nullable().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return GetUserDataIdQuery.Data(
        usersData = _usersData
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: GetUserDataIdQuery.Data,
    ): Unit {
      writer.name("usersData")
      UsersData.obj().nullable().toJson(writer, customScalarAdapters, value.usersData)
    }
  }

  public object UsersData : Adapter<GetUserDataIdQuery.UsersData> {
    public val RESPONSE_NAMES: List<String> = listOf("data")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        GetUserDataIdQuery.UsersData {
      var _data: List<GetUserDataIdQuery.Data1>? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _data = Data1.obj().list().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return GetUserDataIdQuery.UsersData(
        `data` = _data!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: GetUserDataIdQuery.UsersData,
    ): Unit {
      writer.name("data")
      Data1.obj().list().toJson(writer, customScalarAdapters, value.`data`)
    }
  }

  public object Data1 : Adapter<GetUserDataIdQuery.Data1> {
    public val RESPONSE_NAMES: List<String> = listOf("id")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        GetUserDataIdQuery.Data1 {
      var _id: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _id = NullableStringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return GetUserDataIdQuery.Data1(
        id = _id
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: GetUserDataIdQuery.Data1,
    ): Unit {
      writer.name("id")
      NullableStringAdapter.toJson(writer, customScalarAdapters, value.id)
    }
  }
}
