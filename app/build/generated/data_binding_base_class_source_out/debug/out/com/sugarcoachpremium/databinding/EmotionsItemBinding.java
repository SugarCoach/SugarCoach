// Generated by view binder compiler. Do not edit!
package com.sugarcoachpremium.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.sugarcoachpremium.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class EmotionsItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView emotionsItemImg;

  @NonNull
  public final LinearLayout emotionsItemLinear;

  @NonNull
  public final AppCompatTextView emotionsItemText;

  private EmotionsItemBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView emotionsItemImg, @NonNull LinearLayout emotionsItemLinear,
      @NonNull AppCompatTextView emotionsItemText) {
    this.rootView = rootView;
    this.emotionsItemImg = emotionsItemImg;
    this.emotionsItemLinear = emotionsItemLinear;
    this.emotionsItemText = emotionsItemText;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static EmotionsItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static EmotionsItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.emotions_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static EmotionsItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.emotions_item_img;
      ImageView emotionsItemImg = ViewBindings.findChildViewById(rootView, id);
      if (emotionsItemImg == null) {
        break missingId;
      }

      id = R.id.emotions_item_linear;
      LinearLayout emotionsItemLinear = ViewBindings.findChildViewById(rootView, id);
      if (emotionsItemLinear == null) {
        break missingId;
      }

      id = R.id.emotions_item_text;
      AppCompatTextView emotionsItemText = ViewBindings.findChildViewById(rootView, id);
      if (emotionsItemText == null) {
        break missingId;
      }

      return new EmotionsItemBinding((ConstraintLayout) rootView, emotionsItemImg,
          emotionsItemLinear, emotionsItemText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
