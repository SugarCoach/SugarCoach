// Generated by view binder compiler. Do not edit!
package com.sugarcoachpremium.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.github.mikephil.charting.charts.BarChart;
import com.github.mikephil.charting.charts.PieChart;
import com.skydoves.powerspinner.PowerSpinnerView;
import com.sugarcoachpremium.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class StatisticsItemBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout dailyStatisticsItemLl;

  @NonNull
  public final BarChart statisticsItemBarchart;

  @NonNull
  public final LinearLayout statisticsItemDateLayout;

  @NonNull
  public final AppCompatTextView statisticsItemDateTv;

  @NonNull
  public final PieChart statisticsItemPiechart;

  @NonNull
  public final AppCompatTextView statisticsItemTitle;

  @NonNull
  public final PowerSpinnerView statisticsItemTypes;

  @NonNull
  public final PowerSpinnerView statisticsItemTypesCar;

  @NonNull
  public final PowerSpinnerView statisticsItemTypesExercise;

  @NonNull
  public final PowerSpinnerView statisticsItemTypesInsulina;

  @NonNull
  public final PowerSpinnerView statisticsItemTypesState;

  private StatisticsItemBinding(@NonNull LinearLayout rootView,
      @NonNull LinearLayout dailyStatisticsItemLl, @NonNull BarChart statisticsItemBarchart,
      @NonNull LinearLayout statisticsItemDateLayout,
      @NonNull AppCompatTextView statisticsItemDateTv, @NonNull PieChart statisticsItemPiechart,
      @NonNull AppCompatTextView statisticsItemTitle, @NonNull PowerSpinnerView statisticsItemTypes,
      @NonNull PowerSpinnerView statisticsItemTypesCar,
      @NonNull PowerSpinnerView statisticsItemTypesExercise,
      @NonNull PowerSpinnerView statisticsItemTypesInsulina,
      @NonNull PowerSpinnerView statisticsItemTypesState) {
    this.rootView = rootView;
    this.dailyStatisticsItemLl = dailyStatisticsItemLl;
    this.statisticsItemBarchart = statisticsItemBarchart;
    this.statisticsItemDateLayout = statisticsItemDateLayout;
    this.statisticsItemDateTv = statisticsItemDateTv;
    this.statisticsItemPiechart = statisticsItemPiechart;
    this.statisticsItemTitle = statisticsItemTitle;
    this.statisticsItemTypes = statisticsItemTypes;
    this.statisticsItemTypesCar = statisticsItemTypesCar;
    this.statisticsItemTypesExercise = statisticsItemTypesExercise;
    this.statisticsItemTypesInsulina = statisticsItemTypesInsulina;
    this.statisticsItemTypesState = statisticsItemTypesState;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static StatisticsItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static StatisticsItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.statistics_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static StatisticsItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.daily_statistics_item_ll;
      LinearLayout dailyStatisticsItemLl = ViewBindings.findChildViewById(rootView, id);
      if (dailyStatisticsItemLl == null) {
        break missingId;
      }

      id = R.id.statistics_item_barchart;
      BarChart statisticsItemBarchart = ViewBindings.findChildViewById(rootView, id);
      if (statisticsItemBarchart == null) {
        break missingId;
      }

      id = R.id.statistics_item_date_layout;
      LinearLayout statisticsItemDateLayout = ViewBindings.findChildViewById(rootView, id);
      if (statisticsItemDateLayout == null) {
        break missingId;
      }

      id = R.id.statistics_item_date_tv;
      AppCompatTextView statisticsItemDateTv = ViewBindings.findChildViewById(rootView, id);
      if (statisticsItemDateTv == null) {
        break missingId;
      }

      id = R.id.statistics_item_piechart;
      PieChart statisticsItemPiechart = ViewBindings.findChildViewById(rootView, id);
      if (statisticsItemPiechart == null) {
        break missingId;
      }

      id = R.id.statistics_item_title;
      AppCompatTextView statisticsItemTitle = ViewBindings.findChildViewById(rootView, id);
      if (statisticsItemTitle == null) {
        break missingId;
      }

      id = R.id.statistics_item_types;
      PowerSpinnerView statisticsItemTypes = ViewBindings.findChildViewById(rootView, id);
      if (statisticsItemTypes == null) {
        break missingId;
      }

      id = R.id.statistics_item_types_car;
      PowerSpinnerView statisticsItemTypesCar = ViewBindings.findChildViewById(rootView, id);
      if (statisticsItemTypesCar == null) {
        break missingId;
      }

      id = R.id.statistics_item_types_exercise;
      PowerSpinnerView statisticsItemTypesExercise = ViewBindings.findChildViewById(rootView, id);
      if (statisticsItemTypesExercise == null) {
        break missingId;
      }

      id = R.id.statistics_item_types_insulina;
      PowerSpinnerView statisticsItemTypesInsulina = ViewBindings.findChildViewById(rootView, id);
      if (statisticsItemTypesInsulina == null) {
        break missingId;
      }

      id = R.id.statistics_item_types_state;
      PowerSpinnerView statisticsItemTypesState = ViewBindings.findChildViewById(rootView, id);
      if (statisticsItemTypesState == null) {
        break missingId;
      }

      return new StatisticsItemBinding((LinearLayout) rootView, dailyStatisticsItemLl,
          statisticsItemBarchart, statisticsItemDateLayout, statisticsItemDateTv,
          statisticsItemPiechart, statisticsItemTitle, statisticsItemTypes, statisticsItemTypesCar,
          statisticsItemTypesExercise, statisticsItemTypesInsulina, statisticsItemTypesState);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
