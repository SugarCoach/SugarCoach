// Generated by view binder compiler. Do not edit!
package com.sugarcoachpremium.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.appcompat.widget.SwitchCompat;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.sugarcoachpremium.R;
import com.vicmikhailau.maskededittext.MaskedEditText;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityConfigBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final AppCompatImageView bg;

  @NonNull
  public final SwitchCompat configControl;

  @NonNull
  public final LinearLayout configControlLinear;

  @NonNull
  public final LinearLayout configControlQr;

  @NonNull
  public final TextView configControlTitle;

  @NonNull
  public final SwitchCompat configGeo;

  @NonNull
  public final TextView configGeoTitle;

  @NonNull
  public final SwitchCompat configMedico;

  @NonNull
  public final LinearLayout configMedicoLinear;

  @NonNull
  public final LinearLayout configMedicoQr;

  @NonNull
  public final TextView configMedicoTitle;

  @NonNull
  public final MaskedEditText configNumber;

  @NonNull
  public final AppCompatTextView configQuestions;

  @NonNull
  public final SwitchCompat configSms;

  @NonNull
  public final AppCompatImageView configSmsInfo;

  @NonNull
  public final TextView configSmsTitle;

  @NonNull
  public final TextView configType;

  @NonNull
  public final CardView configUpgrade;

  @NonNull
  public final CircleImageView configUserimgIv;

  @NonNull
  public final AppCompatTextView configUsernameTxt;

  @NonNull
  public final ConstraintLayout constraintLayout;

  @NonNull
  public final LinearLayout dailyRegister;

  @NonNull
  public final Guideline guideline;

  @NonNull
  public final LinearLayout home;

  @NonNull
  public final LinearLayout linear;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final LinearLayout statistics;

  @NonNull
  public final LinearLayout treament;

  private ActivityConfigBinding(@NonNull LinearLayout rootView, @NonNull AppCompatImageView bg,
      @NonNull SwitchCompat configControl, @NonNull LinearLayout configControlLinear,
      @NonNull LinearLayout configControlQr, @NonNull TextView configControlTitle,
      @NonNull SwitchCompat configGeo, @NonNull TextView configGeoTitle,
      @NonNull SwitchCompat configMedico, @NonNull LinearLayout configMedicoLinear,
      @NonNull LinearLayout configMedicoQr, @NonNull TextView configMedicoTitle,
      @NonNull MaskedEditText configNumber, @NonNull AppCompatTextView configQuestions,
      @NonNull SwitchCompat configSms, @NonNull AppCompatImageView configSmsInfo,
      @NonNull TextView configSmsTitle, @NonNull TextView configType,
      @NonNull CardView configUpgrade, @NonNull CircleImageView configUserimgIv,
      @NonNull AppCompatTextView configUsernameTxt, @NonNull ConstraintLayout constraintLayout,
      @NonNull LinearLayout dailyRegister, @NonNull Guideline guideline, @NonNull LinearLayout home,
      @NonNull LinearLayout linear, @NonNull LinearLayout linearLayout,
      @NonNull LinearLayout statistics, @NonNull LinearLayout treament) {
    this.rootView = rootView;
    this.bg = bg;
    this.configControl = configControl;
    this.configControlLinear = configControlLinear;
    this.configControlQr = configControlQr;
    this.configControlTitle = configControlTitle;
    this.configGeo = configGeo;
    this.configGeoTitle = configGeoTitle;
    this.configMedico = configMedico;
    this.configMedicoLinear = configMedicoLinear;
    this.configMedicoQr = configMedicoQr;
    this.configMedicoTitle = configMedicoTitle;
    this.configNumber = configNumber;
    this.configQuestions = configQuestions;
    this.configSms = configSms;
    this.configSmsInfo = configSmsInfo;
    this.configSmsTitle = configSmsTitle;
    this.configType = configType;
    this.configUpgrade = configUpgrade;
    this.configUserimgIv = configUserimgIv;
    this.configUsernameTxt = configUsernameTxt;
    this.constraintLayout = constraintLayout;
    this.dailyRegister = dailyRegister;
    this.guideline = guideline;
    this.home = home;
    this.linear = linear;
    this.linearLayout = linearLayout;
    this.statistics = statistics;
    this.treament = treament;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityConfigBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityConfigBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_config, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityConfigBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bg;
      AppCompatImageView bg = ViewBindings.findChildViewById(rootView, id);
      if (bg == null) {
        break missingId;
      }

      id = R.id.config_control;
      SwitchCompat configControl = ViewBindings.findChildViewById(rootView, id);
      if (configControl == null) {
        break missingId;
      }

      id = R.id.config_control_linear;
      LinearLayout configControlLinear = ViewBindings.findChildViewById(rootView, id);
      if (configControlLinear == null) {
        break missingId;
      }

      id = R.id.config_control_qr;
      LinearLayout configControlQr = ViewBindings.findChildViewById(rootView, id);
      if (configControlQr == null) {
        break missingId;
      }

      id = R.id.config_control_title;
      TextView configControlTitle = ViewBindings.findChildViewById(rootView, id);
      if (configControlTitle == null) {
        break missingId;
      }

      id = R.id.config_geo;
      SwitchCompat configGeo = ViewBindings.findChildViewById(rootView, id);
      if (configGeo == null) {
        break missingId;
      }

      id = R.id.config_geo_title;
      TextView configGeoTitle = ViewBindings.findChildViewById(rootView, id);
      if (configGeoTitle == null) {
        break missingId;
      }

      id = R.id.config_medico;
      SwitchCompat configMedico = ViewBindings.findChildViewById(rootView, id);
      if (configMedico == null) {
        break missingId;
      }

      id = R.id.config_medico_linear;
      LinearLayout configMedicoLinear = ViewBindings.findChildViewById(rootView, id);
      if (configMedicoLinear == null) {
        break missingId;
      }

      id = R.id.config_medico_qr;
      LinearLayout configMedicoQr = ViewBindings.findChildViewById(rootView, id);
      if (configMedicoQr == null) {
        break missingId;
      }

      id = R.id.config_medico_title;
      TextView configMedicoTitle = ViewBindings.findChildViewById(rootView, id);
      if (configMedicoTitle == null) {
        break missingId;
      }

      id = R.id.config_number;
      MaskedEditText configNumber = ViewBindings.findChildViewById(rootView, id);
      if (configNumber == null) {
        break missingId;
      }

      id = R.id.config_questions;
      AppCompatTextView configQuestions = ViewBindings.findChildViewById(rootView, id);
      if (configQuestions == null) {
        break missingId;
      }

      id = R.id.config_sms;
      SwitchCompat configSms = ViewBindings.findChildViewById(rootView, id);
      if (configSms == null) {
        break missingId;
      }

      id = R.id.config_sms_info;
      AppCompatImageView configSmsInfo = ViewBindings.findChildViewById(rootView, id);
      if (configSmsInfo == null) {
        break missingId;
      }

      id = R.id.config_sms_title;
      TextView configSmsTitle = ViewBindings.findChildViewById(rootView, id);
      if (configSmsTitle == null) {
        break missingId;
      }

      id = R.id.config_type;
      TextView configType = ViewBindings.findChildViewById(rootView, id);
      if (configType == null) {
        break missingId;
      }

      id = R.id.config_upgrade;
      CardView configUpgrade = ViewBindings.findChildViewById(rootView, id);
      if (configUpgrade == null) {
        break missingId;
      }

      id = R.id.config_userimg_iv;
      CircleImageView configUserimgIv = ViewBindings.findChildViewById(rootView, id);
      if (configUserimgIv == null) {
        break missingId;
      }

      id = R.id.config_username_txt;
      AppCompatTextView configUsernameTxt = ViewBindings.findChildViewById(rootView, id);
      if (configUsernameTxt == null) {
        break missingId;
      }

      id = R.id.constraintLayout;
      ConstraintLayout constraintLayout = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout == null) {
        break missingId;
      }

      id = R.id.dailyRegister;
      LinearLayout dailyRegister = ViewBindings.findChildViewById(rootView, id);
      if (dailyRegister == null) {
        break missingId;
      }

      id = R.id.guideline;
      Guideline guideline = ViewBindings.findChildViewById(rootView, id);
      if (guideline == null) {
        break missingId;
      }

      id = R.id.home;
      LinearLayout home = ViewBindings.findChildViewById(rootView, id);
      if (home == null) {
        break missingId;
      }

      id = R.id.linear;
      LinearLayout linear = ViewBindings.findChildViewById(rootView, id);
      if (linear == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.statistics;
      LinearLayout statistics = ViewBindings.findChildViewById(rootView, id);
      if (statistics == null) {
        break missingId;
      }

      id = R.id.treament;
      LinearLayout treament = ViewBindings.findChildViewById(rootView, id);
      if (treament == null) {
        break missingId;
      }

      return new ActivityConfigBinding((LinearLayout) rootView, bg, configControl,
          configControlLinear, configControlQr, configControlTitle, configGeo, configGeoTitle,
          configMedico, configMedicoLinear, configMedicoQr, configMedicoTitle, configNumber,
          configQuestions, configSms, configSmsInfo, configSmsTitle, configType, configUpgrade,
          configUserimgIv, configUsernameTxt, constraintLayout, dailyRegister, guideline, home,
          linear, linearLayout, statistics, treament);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
