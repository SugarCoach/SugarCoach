// Generated by view binder compiler. Do not edit!
package com.sugarcoachpremium.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatEditText;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.appcompat.widget.SwitchCompat;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.skydoves.powerspinner.PowerSpinnerView;
import com.sugarcoachpremium.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityTreatmentBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout addRegister;

  @NonNull
  public final AppCompatImageView addRegisterImage;

  @NonNull
  public final AppCompatImageView bg;

  @NonNull
  public final CardView cardView;

  @NonNull
  public final CardView cardView4;

  @NonNull
  public final ConstraintLayout constraintLayout;

  @NonNull
  public final LinearLayout dailyRegister;

  @NonNull
  public final Guideline guideline;

  @NonNull
  public final LinearLayout home;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final LinearLayout statistics;

  @NonNull
  public final AppCompatTextView treamentDateTxt;

  @NonNull
  public final AppCompatTextView treamentTimeTxt;

  @NonNull
  public final CircleImageView treamentUserimgIv;

  @NonNull
  public final AppCompatTextView treamentUsernameTxt;

  @NonNull
  public final PowerSpinnerView treatmentBasal;

  @NonNull
  public final CardView treatmentBasalHoraLinear;

  @NonNull
  public final RecyclerView treatmentBasalList;

  @NonNull
  public final TextView treatmentBasalTitle;

  @NonNull
  public final TextView treatmentBasalUnits;

  @NonNull
  public final SwitchCompat treatmentBomb;

  @NonNull
  public final PowerSpinnerView treatmentBombInfusora;

  @NonNull
  public final LinearLayout treatmentBombNo;

  @NonNull
  public final LinearLayout treatmentBombSi;

  @NonNull
  public final AppCompatEditText treatmentCarbono;

  @NonNull
  public final TextView treatmentCarbonoTitle;

  @NonNull
  public final AppCompatEditText treatmentCarbonoUd;

  @NonNull
  public final PowerSpinnerView treatmentCorrectora;

  @NonNull
  public final RecyclerView treatmentCorrectoraList;

  @NonNull
  public final TextView treatmentCorrectoraListTitle;

  @NonNull
  public final TextView treatmentCorrectoraTitle;

  @NonNull
  public final FloatingActionButton treatmentEdit;

  @NonNull
  public final AppCompatEditText treatmentGluMayor;

  @NonNull
  public final AppCompatEditText treatmentGluMayorUd;

  @NonNull
  public final TextView treatmentGluMayorUdTitle;

  @NonNull
  public final TextView treatmentGluPromTxt;

  @NonNull
  public final AppCompatEditText treatmentHiperTxt;

  @NonNull
  public final AppCompatEditText treatmentHipoTxt;

  @NonNull
  public final RecyclerView treatmentHoraList;

  @NonNull
  public final CardView treatmentHorario;

  @NonNull
  public final TextView treatmentInsuPromTxt;

  @NonNull
  public final TextView treatmentInsuTxt;

  @NonNull
  public final LinearLayout treatmentLl;

  @NonNull
  public final PowerSpinnerView treatmentMedidor;

  @NonNull
  public final FloatingActionButton treatmentMenu;

  @NonNull
  public final EditText treatmentObjTxt;

  @NonNull
  public final TextView treatmentRanges;

  @NonNull
  public final TextView treatmentRecordatorioTitle;

  @NonNull
  public final FloatingActionButton treatmentShared;

  @NonNull
  public final SwitchCompat treatmentSincronizarMedidor;

  private ActivityTreatmentBinding(@NonNull LinearLayout rootView,
      @NonNull LinearLayout addRegister, @NonNull AppCompatImageView addRegisterImage,
      @NonNull AppCompatImageView bg, @NonNull CardView cardView, @NonNull CardView cardView4,
      @NonNull ConstraintLayout constraintLayout, @NonNull LinearLayout dailyRegister,
      @NonNull Guideline guideline, @NonNull LinearLayout home, @NonNull LinearLayout linearLayout,
      @NonNull LinearLayout statistics, @NonNull AppCompatTextView treamentDateTxt,
      @NonNull AppCompatTextView treamentTimeTxt, @NonNull CircleImageView treamentUserimgIv,
      @NonNull AppCompatTextView treamentUsernameTxt, @NonNull PowerSpinnerView treatmentBasal,
      @NonNull CardView treatmentBasalHoraLinear, @NonNull RecyclerView treatmentBasalList,
      @NonNull TextView treatmentBasalTitle, @NonNull TextView treatmentBasalUnits,
      @NonNull SwitchCompat treatmentBomb, @NonNull PowerSpinnerView treatmentBombInfusora,
      @NonNull LinearLayout treatmentBombNo, @NonNull LinearLayout treatmentBombSi,
      @NonNull AppCompatEditText treatmentCarbono, @NonNull TextView treatmentCarbonoTitle,
      @NonNull AppCompatEditText treatmentCarbonoUd, @NonNull PowerSpinnerView treatmentCorrectora,
      @NonNull RecyclerView treatmentCorrectoraList, @NonNull TextView treatmentCorrectoraListTitle,
      @NonNull TextView treatmentCorrectoraTitle, @NonNull FloatingActionButton treatmentEdit,
      @NonNull AppCompatEditText treatmentGluMayor, @NonNull AppCompatEditText treatmentGluMayorUd,
      @NonNull TextView treatmentGluMayorUdTitle, @NonNull TextView treatmentGluPromTxt,
      @NonNull AppCompatEditText treatmentHiperTxt, @NonNull AppCompatEditText treatmentHipoTxt,
      @NonNull RecyclerView treatmentHoraList, @NonNull CardView treatmentHorario,
      @NonNull TextView treatmentInsuPromTxt, @NonNull TextView treatmentInsuTxt,
      @NonNull LinearLayout treatmentLl, @NonNull PowerSpinnerView treatmentMedidor,
      @NonNull FloatingActionButton treatmentMenu, @NonNull EditText treatmentObjTxt,
      @NonNull TextView treatmentRanges, @NonNull TextView treatmentRecordatorioTitle,
      @NonNull FloatingActionButton treatmentShared,
      @NonNull SwitchCompat treatmentSincronizarMedidor) {
    this.rootView = rootView;
    this.addRegister = addRegister;
    this.addRegisterImage = addRegisterImage;
    this.bg = bg;
    this.cardView = cardView;
    this.cardView4 = cardView4;
    this.constraintLayout = constraintLayout;
    this.dailyRegister = dailyRegister;
    this.guideline = guideline;
    this.home = home;
    this.linearLayout = linearLayout;
    this.statistics = statistics;
    this.treamentDateTxt = treamentDateTxt;
    this.treamentTimeTxt = treamentTimeTxt;
    this.treamentUserimgIv = treamentUserimgIv;
    this.treamentUsernameTxt = treamentUsernameTxt;
    this.treatmentBasal = treatmentBasal;
    this.treatmentBasalHoraLinear = treatmentBasalHoraLinear;
    this.treatmentBasalList = treatmentBasalList;
    this.treatmentBasalTitle = treatmentBasalTitle;
    this.treatmentBasalUnits = treatmentBasalUnits;
    this.treatmentBomb = treatmentBomb;
    this.treatmentBombInfusora = treatmentBombInfusora;
    this.treatmentBombNo = treatmentBombNo;
    this.treatmentBombSi = treatmentBombSi;
    this.treatmentCarbono = treatmentCarbono;
    this.treatmentCarbonoTitle = treatmentCarbonoTitle;
    this.treatmentCarbonoUd = treatmentCarbonoUd;
    this.treatmentCorrectora = treatmentCorrectora;
    this.treatmentCorrectoraList = treatmentCorrectoraList;
    this.treatmentCorrectoraListTitle = treatmentCorrectoraListTitle;
    this.treatmentCorrectoraTitle = treatmentCorrectoraTitle;
    this.treatmentEdit = treatmentEdit;
    this.treatmentGluMayor = treatmentGluMayor;
    this.treatmentGluMayorUd = treatmentGluMayorUd;
    this.treatmentGluMayorUdTitle = treatmentGluMayorUdTitle;
    this.treatmentGluPromTxt = treatmentGluPromTxt;
    this.treatmentHiperTxt = treatmentHiperTxt;
    this.treatmentHipoTxt = treatmentHipoTxt;
    this.treatmentHoraList = treatmentHoraList;
    this.treatmentHorario = treatmentHorario;
    this.treatmentInsuPromTxt = treatmentInsuPromTxt;
    this.treatmentInsuTxt = treatmentInsuTxt;
    this.treatmentLl = treatmentLl;
    this.treatmentMedidor = treatmentMedidor;
    this.treatmentMenu = treatmentMenu;
    this.treatmentObjTxt = treatmentObjTxt;
    this.treatmentRanges = treatmentRanges;
    this.treatmentRecordatorioTitle = treatmentRecordatorioTitle;
    this.treatmentShared = treatmentShared;
    this.treatmentSincronizarMedidor = treatmentSincronizarMedidor;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityTreatmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityTreatmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_treatment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityTreatmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_register;
      LinearLayout addRegister = ViewBindings.findChildViewById(rootView, id);
      if (addRegister == null) {
        break missingId;
      }

      id = R.id.add_register_image;
      AppCompatImageView addRegisterImage = ViewBindings.findChildViewById(rootView, id);
      if (addRegisterImage == null) {
        break missingId;
      }

      id = R.id.bg;
      AppCompatImageView bg = ViewBindings.findChildViewById(rootView, id);
      if (bg == null) {
        break missingId;
      }

      id = R.id.cardView;
      CardView cardView = ViewBindings.findChildViewById(rootView, id);
      if (cardView == null) {
        break missingId;
      }

      id = R.id.cardView4;
      CardView cardView4 = ViewBindings.findChildViewById(rootView, id);
      if (cardView4 == null) {
        break missingId;
      }

      id = R.id.constraintLayout;
      ConstraintLayout constraintLayout = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout == null) {
        break missingId;
      }

      id = R.id.dailyRegister;
      LinearLayout dailyRegister = ViewBindings.findChildViewById(rootView, id);
      if (dailyRegister == null) {
        break missingId;
      }

      id = R.id.guideline;
      Guideline guideline = ViewBindings.findChildViewById(rootView, id);
      if (guideline == null) {
        break missingId;
      }

      id = R.id.home;
      LinearLayout home = ViewBindings.findChildViewById(rootView, id);
      if (home == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.statistics;
      LinearLayout statistics = ViewBindings.findChildViewById(rootView, id);
      if (statistics == null) {
        break missingId;
      }

      id = R.id.treament_date_txt;
      AppCompatTextView treamentDateTxt = ViewBindings.findChildViewById(rootView, id);
      if (treamentDateTxt == null) {
        break missingId;
      }

      id = R.id.treament_time_txt;
      AppCompatTextView treamentTimeTxt = ViewBindings.findChildViewById(rootView, id);
      if (treamentTimeTxt == null) {
        break missingId;
      }

      id = R.id.treament_userimg_iv;
      CircleImageView treamentUserimgIv = ViewBindings.findChildViewById(rootView, id);
      if (treamentUserimgIv == null) {
        break missingId;
      }

      id = R.id.treament_username_txt;
      AppCompatTextView treamentUsernameTxt = ViewBindings.findChildViewById(rootView, id);
      if (treamentUsernameTxt == null) {
        break missingId;
      }

      id = R.id.treatment_basal;
      PowerSpinnerView treatmentBasal = ViewBindings.findChildViewById(rootView, id);
      if (treatmentBasal == null) {
        break missingId;
      }

      id = R.id.treatment_basal_hora_linear;
      CardView treatmentBasalHoraLinear = ViewBindings.findChildViewById(rootView, id);
      if (treatmentBasalHoraLinear == null) {
        break missingId;
      }

      id = R.id.treatment_basal_list;
      RecyclerView treatmentBasalList = ViewBindings.findChildViewById(rootView, id);
      if (treatmentBasalList == null) {
        break missingId;
      }

      id = R.id.treatment_basal_title;
      TextView treatmentBasalTitle = ViewBindings.findChildViewById(rootView, id);
      if (treatmentBasalTitle == null) {
        break missingId;
      }

      id = R.id.treatment_basal_units;
      TextView treatmentBasalUnits = ViewBindings.findChildViewById(rootView, id);
      if (treatmentBasalUnits == null) {
        break missingId;
      }

      id = R.id.treatment_bomb;
      SwitchCompat treatmentBomb = ViewBindings.findChildViewById(rootView, id);
      if (treatmentBomb == null) {
        break missingId;
      }

      id = R.id.treatment_bomb_infusora;
      PowerSpinnerView treatmentBombInfusora = ViewBindings.findChildViewById(rootView, id);
      if (treatmentBombInfusora == null) {
        break missingId;
      }

      id = R.id.treatment_bomb_no;
      LinearLayout treatmentBombNo = ViewBindings.findChildViewById(rootView, id);
      if (treatmentBombNo == null) {
        break missingId;
      }

      id = R.id.treatment_bomb_si;
      LinearLayout treatmentBombSi = ViewBindings.findChildViewById(rootView, id);
      if (treatmentBombSi == null) {
        break missingId;
      }

      id = R.id.treatment_carbono;
      AppCompatEditText treatmentCarbono = ViewBindings.findChildViewById(rootView, id);
      if (treatmentCarbono == null) {
        break missingId;
      }

      id = R.id.treatment_carbono_title;
      TextView treatmentCarbonoTitle = ViewBindings.findChildViewById(rootView, id);
      if (treatmentCarbonoTitle == null) {
        break missingId;
      }

      id = R.id.treatment_carbono_ud;
      AppCompatEditText treatmentCarbonoUd = ViewBindings.findChildViewById(rootView, id);
      if (treatmentCarbonoUd == null) {
        break missingId;
      }

      id = R.id.treatment_correctora;
      PowerSpinnerView treatmentCorrectora = ViewBindings.findChildViewById(rootView, id);
      if (treatmentCorrectora == null) {
        break missingId;
      }

      id = R.id.treatment_correctora_list;
      RecyclerView treatmentCorrectoraList = ViewBindings.findChildViewById(rootView, id);
      if (treatmentCorrectoraList == null) {
        break missingId;
      }

      id = R.id.treatment_correctora_list_title;
      TextView treatmentCorrectoraListTitle = ViewBindings.findChildViewById(rootView, id);
      if (treatmentCorrectoraListTitle == null) {
        break missingId;
      }

      id = R.id.treatment_correctora_title;
      TextView treatmentCorrectoraTitle = ViewBindings.findChildViewById(rootView, id);
      if (treatmentCorrectoraTitle == null) {
        break missingId;
      }

      id = R.id.treatment_edit;
      FloatingActionButton treatmentEdit = ViewBindings.findChildViewById(rootView, id);
      if (treatmentEdit == null) {
        break missingId;
      }

      id = R.id.treatment_glu_mayor;
      AppCompatEditText treatmentGluMayor = ViewBindings.findChildViewById(rootView, id);
      if (treatmentGluMayor == null) {
        break missingId;
      }

      id = R.id.treatment_glu_mayor_ud;
      AppCompatEditText treatmentGluMayorUd = ViewBindings.findChildViewById(rootView, id);
      if (treatmentGluMayorUd == null) {
        break missingId;
      }

      id = R.id.treatment_glu_mayor_ud_title;
      TextView treatmentGluMayorUdTitle = ViewBindings.findChildViewById(rootView, id);
      if (treatmentGluMayorUdTitle == null) {
        break missingId;
      }

      id = R.id.treatment_glu_prom_txt;
      TextView treatmentGluPromTxt = ViewBindings.findChildViewById(rootView, id);
      if (treatmentGluPromTxt == null) {
        break missingId;
      }

      id = R.id.treatment_hiper_txt;
      AppCompatEditText treatmentHiperTxt = ViewBindings.findChildViewById(rootView, id);
      if (treatmentHiperTxt == null) {
        break missingId;
      }

      id = R.id.treatment_hipo_txt;
      AppCompatEditText treatmentHipoTxt = ViewBindings.findChildViewById(rootView, id);
      if (treatmentHipoTxt == null) {
        break missingId;
      }

      id = R.id.treatment_hora_list;
      RecyclerView treatmentHoraList = ViewBindings.findChildViewById(rootView, id);
      if (treatmentHoraList == null) {
        break missingId;
      }

      id = R.id.treatment_horario;
      CardView treatmentHorario = ViewBindings.findChildViewById(rootView, id);
      if (treatmentHorario == null) {
        break missingId;
      }

      id = R.id.treatment_insu_prom_txt;
      TextView treatmentInsuPromTxt = ViewBindings.findChildViewById(rootView, id);
      if (treatmentInsuPromTxt == null) {
        break missingId;
      }

      id = R.id.treatment_insu_txt;
      TextView treatmentInsuTxt = ViewBindings.findChildViewById(rootView, id);
      if (treatmentInsuTxt == null) {
        break missingId;
      }

      id = R.id.treatment_ll;
      LinearLayout treatmentLl = ViewBindings.findChildViewById(rootView, id);
      if (treatmentLl == null) {
        break missingId;
      }

      id = R.id.treatment_medidor;
      PowerSpinnerView treatmentMedidor = ViewBindings.findChildViewById(rootView, id);
      if (treatmentMedidor == null) {
        break missingId;
      }

      id = R.id.treatment_menu;
      FloatingActionButton treatmentMenu = ViewBindings.findChildViewById(rootView, id);
      if (treatmentMenu == null) {
        break missingId;
      }

      id = R.id.treatment_obj_txt;
      EditText treatmentObjTxt = ViewBindings.findChildViewById(rootView, id);
      if (treatmentObjTxt == null) {
        break missingId;
      }

      id = R.id.treatment_ranges;
      TextView treatmentRanges = ViewBindings.findChildViewById(rootView, id);
      if (treatmentRanges == null) {
        break missingId;
      }

      id = R.id.treatment_recordatorio_title;
      TextView treatmentRecordatorioTitle = ViewBindings.findChildViewById(rootView, id);
      if (treatmentRecordatorioTitle == null) {
        break missingId;
      }

      id = R.id.treatment_shared;
      FloatingActionButton treatmentShared = ViewBindings.findChildViewById(rootView, id);
      if (treatmentShared == null) {
        break missingId;
      }

      id = R.id.treatment_sincronizar_medidor;
      SwitchCompat treatmentSincronizarMedidor = ViewBindings.findChildViewById(rootView, id);
      if (treatmentSincronizarMedidor == null) {
        break missingId;
      }

      return new ActivityTreatmentBinding((LinearLayout) rootView, addRegister, addRegisterImage,
          bg, cardView, cardView4, constraintLayout, dailyRegister, guideline, home, linearLayout,
          statistics, treamentDateTxt, treamentTimeTxt, treamentUserimgIv, treamentUsernameTxt,
          treatmentBasal, treatmentBasalHoraLinear, treatmentBasalList, treatmentBasalTitle,
          treatmentBasalUnits, treatmentBomb, treatmentBombInfusora, treatmentBombNo,
          treatmentBombSi, treatmentCarbono, treatmentCarbonoTitle, treatmentCarbonoUd,
          treatmentCorrectora, treatmentCorrectoraList, treatmentCorrectoraListTitle,
          treatmentCorrectoraTitle, treatmentEdit, treatmentGluMayor, treatmentGluMayorUd,
          treatmentGluMayorUdTitle, treatmentGluPromTxt, treatmentHiperTxt, treatmentHipoTxt,
          treatmentHoraList, treatmentHorario, treatmentInsuPromTxt, treatmentInsuTxt, treatmentLl,
          treatmentMedidor, treatmentMenu, treatmentObjTxt, treatmentRanges,
          treatmentRecordatorioTitle, treatmentShared, treatmentSincronizarMedidor);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
